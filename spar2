#!/bin/bash
exec > >(tee /sparbuild.$$.$(date +'%Y-%m-%d.%H%M').log) 3>&1

if [[ ! -f /.build ]]; then
  echo "NOT RUNNING IN A CHROOT'd RIG BUILD"
  echo "BAILING OUT!"
  exit 1
fi
. /.build

set -ex
cd /source

if false; then
# linux
pushd linux-$linux_version
  make mrproper
  make INSTALL_HDR_PATH=dest headers_install
  find dest/include \( -name .install -o -name ..install.cmd \) -delete
  cp -rv dest/include/* /usr/include
popd

# man-pages
pushd man-pages-4.12
  make install
popd

# glibc
case $(uname -m) in
  i?86)
    GCC_INCDIR=/usr/lib/gcc/$(uname -m)-pc-linux-gnu/7.2.0/include
    ln -sfv ld-linux.so.2 /lib/ld-lsb.so.3
    ;;

  x86_64)
    GCC_INCDIR=/usr/lib/gcc/x86_64-pc-linux-gnu/7.2.0/include
    ln -sfv ../lib/ld-linux-x86-64.so.2 /lib64
    ln -sfv ../lib/ld-linux-x86-64.so.2 /lib64/ld-lsb-x86-64.so.3
    ;;
esac

# set up /etc/services and /etc/hosts, as required by the glibc test
# test suite, # specifically posix/tst-getaddrinfo{4,5}
# -- tst-getaddrinfo4 does port/host lookups for http/$(hostname),
# and tst-getaddrinfo5 needs to be able to resolve 'localhost.' to
# ensure that 'localhost..' does not resolve.
#
cat >/etc/hosts <<EOF
127.0.0.1 localhost localhost. $(hostname)
EOF
cat >/etc/services <<EOF
http 80/tcp www
http 80/udp
EOF

rm -f /usr/include/limits.h
mkdir -pv /source/build/glibc
pushd /source/build/glibc
  CC="gcc -isystem $GCC_INCDIR -isystem /usr/include" \
  ../../glibc-$glibc_version/configure \
    --prefix=/usr                      \
    --disable-werror                   \
    --enable-kernel=3.2                \
    --enable-stack-protector=strong    \
    libc_cv_slibdir=/lib
  unset GCC_INCDIR

  make -j
  make check
  touch /etc/ld.so.conf
  sed '/test-installation/s@$(PERL)@echo not running@' -i ../../glibc-$glibc_version/Makefile
  make install

  cp -v ../../glibc-$glibc_version/nscd/nscd.conf /etc/nscd.conf
  mkdir -pv /var/cache/nscd

  mkdir -pv /usr/lib/locale
  /usr/bin/localedef -i en_US -f UTF-8 en_US.UTF-8

  cat > /etc/nsswitch.conf << "EOF"
passwd:    files
group:     files
shadow:    files

hosts:     files dns
networks:  files

protocols: files
services:  files
ethers:    files
rpc:       files
EOF

  tar -xf ../../tzdata2017b.tar.gz
  ZONEINFO=/usr/share/zoneinfo
  mkdir -pv $ZONEINFO/{posix,right}

  for tz in etcetera southamerica northamerica europe africa antarctica  \
            asia australasia backward pacificnew systemv; do
    zic -L /dev/null   -d $ZONEINFO       -y "sh yearistype.sh" ${tz}
    zic -L /dev/null   -d $ZONEINFO/posix -y "sh yearistype.sh" ${tz}
    zic -L leapseconds -d $ZONEINFO/right -y "sh yearistype.sh" ${tz}
  done

  cp -v zone.tab zone1970.tab iso3166.tab $ZONEINFO
  zic -d $ZONEINFO -p America/New_York
  unset ZONEINFO

  cp -v /usr/share/zoneinfo/America/New_York /etc/localtime

  # SKIP /etc/ld.co.conf* configuration
popd

# adjust the toolchain
mv -v /tools/bin/{ld,ld-old}
mv -v /tools/$(uname -m)-pc-linux-gnu/bin/{ld,ld-old}
mv -v /tools/bin/{ld-new,ld}
ln -sv /tools/bin/ld /tools/$(uname -m)-pc-linux-gnu/bin/ld

# update gcc specs to point to the correct loader
gcc -dumpspecs | sed -e 's@/tools@@g'                   \
    -e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
    -e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' >      \
    $(dirname $(gcc --print-libgcc-file-name))/specs

# check it, yo
pushd /source/build
  echo 'int main() { return 0; }' > dummy.c
  cc dummy.c -v -Wl,--verbose &> dummy.log
  readelf -l a.out | grep -q ': /lib'
  ./a.out
  grep -q -o '/usr/lib.*/crt1.*succeeded' dummy.log
  grep -q -o '/usr/lib.*/crti.*succeeded' dummy.log
  grep -q -o '/usr/lib.*/crtn.*succeeded' dummy.log
  grep -q "/lib.*/libc.so.6 " dummy.log
  grep -q found dummy.log
  rm -f dummy.c dummy.log a.out
popd

# start installing host package

# zlib
mkdir -p build/zlib
pushd build/zlib
  ../../zlib-$zlib_version/configure \
    --prefix=/usr
  make -j
  make check
  make install
  # move the libs to /lib
  mv -v /usr/lib/libz.so.* /lib
  ln -sfv ../../lib/$(readlink /usr/lib/libz.so) /usr/lib/libz.so
popd

# file
mkdir -pv build/file
pushd build/file
  ../../file-$file_version/configure \
    --prefix=/usr
  make -j2
  make check
  make install
popd

# readline
pushd readline-$readline_version
  sed -i '/MV.*old/d' Makefile.in
  sed -i '/{OLDSUFF}/c:' support/shlib-install
popd
mkdir -pv build/readline
pushd build/readline
  ../../readline-$readline_version/configure \
    --prefix=/usr                            \
    --disable-static                         \
    --docdir=/usr/share/doc/readline-$readline_version
  make -j2 SHLIB_LIBS="-L/tools/lib -lncursesw"
  make SHLIB_LIBS="-L/tools/lib -lncurses" install

  mv -v /usr/lib/lib{readline,history}.so.* /lib
  ln -sfv ../../lib/$(readlink /usr/lib/libreadline.so) /usr/lib/libreadline.so
  ln -sfv ../../lib/$(readlink /usr/lib/libhistory.so ) /usr/lib/libhistory.so

  # SKIP installing readline-7.0 documentation...
popd

# m4
mkdir -pv build/m4
pushd build/m4
  ../../m4-$m4_version/configure \
    --prefix=/usr
  make -j2
  make check
  make install
popd

# bc
pushd bc-$bc_version
  cat > bc/fix-libmath_h << "EOF"
#! /bin/bash
sed -e '1   s/^/{"/' \
    -e     's/$/",/' \
    -e '2,$ s/^/"/'  \
    -e   '$ d'       \
    -i libmath.h

sed -e '$ s/$/0}/' \
    -i libmath.h
EOF

  ln -sfv /tools/lib/libncursesw.so.6 /usr/lib/libncursesw.so.6
  ln -sfv libncurses.so.6 /usr/lib/libncurses.so

  sed -i -e '/flex/s/as_fn_error/: ;; # &/' configure
popd
mkdir -pv build/bc
pushd build/bc
  ../../bc-$bc_version/configure   \
    --prefix=/usr                  \
    --with-readline                \
    --mandir=/usr/share/man        \
    --infodir=/usr/share/info
  make -j2
  #echo "quit" | ../../bc-$bc_version/bc/bc -l Test/checklib.b
  make install
popd

fi ############################################################################

# binutils
mkdir -pv build/binutils
pushd build/binutils
  ../../binutils-$binutils_version/configure \
    --prefix=/usr       \
    --enable-gold       \
    --enable-ld=default \
    --enable-plugins    \
    --enable-shared     \
    --disable-werror    \
    --with-system-zlib
  make -j2 tooldir=/usr
  make -k check
  make tooldir=/usr install
popd

# gmp
mkdir -pv build/gmp
pushd build/gmp
  ../../gmp-$gmp_version/configure \
    --prefix=/usr                  \
    --enable-cxx                   \
    --disable-static               \
    --docdir=/usr/share/doc/gmp-$gmp_version
  make -j2
  make -j2 html

  make check 2>&1 | tee gmp-check-log
  awk '/# PASS:/{total+=$3} ; END{print total}' gmp-check-log

  make install
  make install-html
popd

# mpfr
mkdir -pv build/mpfr
pushd build/mpfr
  ../../mpfr-$mpfr_version/configure --prefix=/usr \
    --disable-static                               \
    --enable-thread-safe                           \
    --docdir=/usr/share/doc/mpfr-$mpfr_version
  make -j2
  make -j2 html

  make check

  make install
  make install-html
popd

# mpc
mkdir -pv build/mpx
pushd build/mpx
  ../../mpx-$mpc_version/configure --prefix=/usr \
    --disable-static                             \
    --docdir=/usr/share/doc/mpx-$mpc_version
  make -j2
  make -j2 html

  make check

  make install
  make install-html
popd

# gcc
pushd gcc-$gcc_version
  case $(uname -m) in
    x86_64)
      sed -e '/m64=/s/lib64/lib/' \
          -i.orig gcc/config/i386/t-linux64
      ;;
  esac
popd
rm -f /usr/lib/gcc # don't need the symlink anymore...
mkdir -pv build/gcc
pushd build/gcc
  SED=sed                          \
  ../../gcc-$gcc_version/configure \
    --prefix=/usr                  \
    --enable-languages=c,c++       \
    --disable-multilib             \
    --disable-bootstrap            \
    --with-system-zlib
  make
  ulimit -s 32768
  make -k check
  ../../gcc-$gcc_version/contrib/test_summary

  make install
  ln -sv ../../gcc-$gcc_version/cpp /lib
  ln -sv gcc /usr/bin/cc
  install -v -dm755 /usr/lib/bfd-plugins
  ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/7.2.0/liblto_plugin.so \
          /usr/lib/bfd-plugins/
popd

# check it, yo
pushd /source/build
  echo 'int main() { return 0; }' > dummy.c
  cc dummy.c -v -Wl,--verbose &> dummy.log
  readelf -l a.out | grep -q ': /lib'
  ./a.out
  grep -q -o '/usr/lib.*/crt1.*succeeded' dummy.log
  grep -q -o '/usr/lib.*/crti.*succeeded' dummy.log
  grep -q -o '/usr/lib.*/crtn.*succeeded' dummy.log
  grep -q "/lib.*/libc.so.6 " dummy.log
  grep -q found dummy.log
  rm -f dummy.c dummy.log a.out
popd

echo
echo "DONE (for now)"
